name: Build Release Binaries

on:
  release:
    types: [created]
  workflow_dispatch: {}
    
jobs:
  build: 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:    
          - name: linux_amd64
            artifact: ibazel_linux_amd64
            os: ubuntu-18.04
            build_flags: --platforms=@io_bazel_rules_go//go/toolchain:linux_amd64
            ext: ""
          
          - name: windows_amd64
            artifact: ibazel_windows_amd64.exe
            os: ubuntu-18.04
            build_flags: --platforms=@io_bazel_rules_go//go/toolchain:windows_amd64
            ext: ".exe"

          - name: darwin_amd64
            artifact: ibazel_darwin_amd64
            os: macos-latest
            build_flags: --platforms=@io_bazel_rules_go//go/toolchain:darwin_amd64_cgo
            ext: ""

          - name: darwin_arm64
            artifact: ibazel_darwin_arm64
            os: macos-latest
            build_flags: --platforms=@io_bazel_rules_go//go/toolchain:darwin_arm64_cgo --cpu=darwin_arm64
            ext: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup upterm session
        uses: lhotari/action-upterm@v1

      - uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install Bazelisk
        run: npm --global install @bazel/bazelisk@latest

      - name: Build ibazel 
        run: bazel build //ibazel:ibazel --config release ${{ matrix.build_flags }}
      
      - name: Copy binary
        run: cp $(bazel info bazel-bin)/ibazel/ibazel_/ibazel${{ matrix.ext }} ${{ matrix.artifact }}

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.artifact }}